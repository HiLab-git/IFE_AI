[dataset]
# tensor type (float or double)
tensor_type = float

task_type = cls
root_dir  = ../data
train_csv = config/fk/data_train_fk.csv
valid_csv = config/fk/data_valid_fk.csv
test_csv  = config/data_test.csv

train_batch_size = 16
valid_batch_size = 8
test_batch_size  = 8

# modality number
modal_num = 1

# data transforms
train_transform = [Rescale, RandomCrop, NormalizeWithMeanStd]
valid_transform = [NormalizeWithMeanStd]
test_transform  = [NormalizeWithMeanStd]

Rescale_output_size = [160,160]
RandomCrop_output_size = [144, 144] 

NormalizeWithMeanStd_mean = None
NormalizeWithMeanStd_std  = None
NormalizeWithMeanStd_channels = [0, 1, 2]
NormalizeWithMeanStd_mask     = False
NormalizeWithMeanStd_random_fill = False
NormalizeWithMeanStd_inverse = False


[network]
# this section gives parameters for network
# the keys may be different for different networks

# type of network
net_type = vgg16
pretrain = True
input_chns = 3
# finetune all the layers
update_layers = 0

# number of classes
class_num = 2

[training]
# list of gpus
gpus        = [0]

loss_type     = CrossEntropyLoss

# for optimizers
optimizer     = Adam
learning_rate = 1e-4
momentum      = 0.9
weight_decay  = 1e-4

# for lr schedular (MultiStepLR)
lr_gamma      = 0.5
lr_milestones = [4000, 8000, 12000, 16000, 20000]

ckpt_save_dir    = model/fk/vgg16g/
ckpt_save_prefix = vgg16

# iteration
iter_start = 0
iter_max   = 20000
iter_valid = 500
iter_save  = 20000

[testing]
# list of gpus
gpus        = [0]

# checkpoint mode can be [0-latest, 1-best, 2-specified]
ckpt_mode        = 1
output_csv       = result/fk/vgg16_test.csv
evaluation_mode  = True
save_probability = True
